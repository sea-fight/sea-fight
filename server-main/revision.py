import subprocess
from sys import argv

# if the environment variables are not set then the settings initialization will throw an exception
from server_main.settings import settings  # noqa: F401


def get_used_url():
    if settings.isdocker:
        DB_REMOTE_IP = settings.db_host
    else:
        DB_REMOTE_IP = settings.db_remote_ip

    DB_PORT = str(settings.db_port)
    DB_USER = settings.db_user
    DB_PASSWORD = settings.db_password
    DB_BASE = settings.db_base
    return f"postgresql+asyncpg://{DB_USER}:{DB_PASSWORD}@{DB_REMOTE_IP}:{DB_PORT}/{DB_BASE}"


args = " ".join(argv[1:])
f'alembic revision --autogenerated -m "{args}"'

process = subprocess.Popen(
    ["alembic", "revision", "--autogen", "-m", f'"{args}"'],
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
)

stdout, stderr = process.communicate()

print(stdout.decode())

if stderr:
    print(stderr.decode())
    print(
        f"""
Maybe db container doesn't run? Run `ss -tunlp` to check your ports (DB should running at port {settings.db_port})
and `docker ps` to check docker containers.
"""
    )
else:
    print("Success! Now try to run migrate.sh")
